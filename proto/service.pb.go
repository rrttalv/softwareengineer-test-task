// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DateRange struct {
	PeriodFrom           *Period  `protobuf:"bytes,1,opt,name=period_from,json=periodFrom,proto3" json:"period_from,omitempty"`
	PeriodTo             *Period  `protobuf:"bytes,2,opt,name=period_to,json=periodTo,proto3" json:"period_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DateRange) Reset()         { *m = DateRange{} }
func (m *DateRange) String() string { return proto.CompactTextString(m) }
func (*DateRange) ProtoMessage()    {}
func (*DateRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *DateRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DateRange.Unmarshal(m, b)
}
func (m *DateRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DateRange.Marshal(b, m, deterministic)
}
func (m *DateRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DateRange.Merge(m, src)
}
func (m *DateRange) XXX_Size() int {
	return xxx_messageInfo_DateRange.Size(m)
}
func (m *DateRange) XXX_DiscardUnknown() {
	xxx_messageInfo_DateRange.DiscardUnknown(m)
}

var xxx_messageInfo_DateRange proto.InternalMessageInfo

func (m *DateRange) GetPeriodFrom() *Period {
	if m != nil {
		return m.PeriodFrom
	}
	return nil
}

func (m *DateRange) GetPeriodTo() *Period {
	if m != nil {
		return m.PeriodTo
	}
	return nil
}

type Period struct {
	Year                 int32    `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day                  int32    `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Period) Reset()         { *m = Period{} }
func (m *Period) String() string { return proto.CompactTextString(m) }
func (*Period) ProtoMessage()    {}
func (*Period) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Period) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Period.Unmarshal(m, b)
}
func (m *Period) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Period.Marshal(b, m, deterministic)
}
func (m *Period) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Period.Merge(m, src)
}
func (m *Period) XXX_Size() int {
	return xxx_messageInfo_Period.Size(m)
}
func (m *Period) XXX_DiscardUnknown() {
	xxx_messageInfo_Period.DiscardUnknown(m)
}

var xxx_messageInfo_Period proto.InternalMessageInfo

func (m *Period) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Period) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Period) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

type Tickets struct {
	Ids                  []*ID    `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tickets) Reset()         { *m = Tickets{} }
func (m *Tickets) String() string { return proto.CompactTextString(m) }
func (*Tickets) ProtoMessage()    {}
func (*Tickets) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *Tickets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tickets.Unmarshal(m, b)
}
func (m *Tickets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tickets.Marshal(b, m, deterministic)
}
func (m *Tickets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tickets.Merge(m, src)
}
func (m *Tickets) XXX_Size() int {
	return xxx_messageInfo_Tickets.Size(m)
}
func (m *Tickets) XXX_DiscardUnknown() {
	xxx_messageInfo_Tickets.DiscardUnknown(m)
}

var xxx_messageInfo_Tickets proto.InternalMessageInfo

func (m *Tickets) GetIds() []*ID {
	if m != nil {
		return m.Ids
	}
	return nil
}

//Aggreated category response
type Categories struct {
	Result               []*CategoryResult `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Categories) Reset()         { *m = Categories{} }
func (m *Categories) String() string { return proto.CompactTextString(m) }
func (*Categories) ProtoMessage()    {}
func (*Categories) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *Categories) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Categories.Unmarshal(m, b)
}
func (m *Categories) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Categories.Marshal(b, m, deterministic)
}
func (m *Categories) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Categories.Merge(m, src)
}
func (m *Categories) XXX_Size() int {
	return xxx_messageInfo_Categories.Size(m)
}
func (m *Categories) XXX_DiscardUnknown() {
	xxx_messageInfo_Categories.DiscardUnknown(m)
}

var xxx_messageInfo_Categories proto.InternalMessageInfo

func (m *Categories) GetResult() []*CategoryResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type CategoryResult struct {
	CategoryName         string   `protobuf:"bytes,1,opt,name=category_name,json=categoryName,proto3" json:"category_name,omitempty"`
	Rating               int32    `protobuf:"varint,2,opt,name=rating,proto3" json:"rating,omitempty"`
	Date                 *Period  `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	Score                int32    `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CategoryResult) Reset()         { *m = CategoryResult{} }
func (m *CategoryResult) String() string { return proto.CompactTextString(m) }
func (*CategoryResult) ProtoMessage()    {}
func (*CategoryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *CategoryResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryResult.Unmarshal(m, b)
}
func (m *CategoryResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryResult.Marshal(b, m, deterministic)
}
func (m *CategoryResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryResult.Merge(m, src)
}
func (m *CategoryResult) XXX_Size() int {
	return xxx_messageInfo_CategoryResult.Size(m)
}
func (m *CategoryResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryResult.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryResult proto.InternalMessageInfo

func (m *CategoryResult) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

func (m *CategoryResult) GetRating() int32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *CategoryResult) GetDate() *Period {
	if m != nil {
		return m.Date
	}
	return nil
}

func (m *CategoryResult) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

//Scores by ticket response
//Returns an array of tickets which include ticket ID and categories
type TicketScores struct {
	Scores               []*TicketValues `protobuf:"bytes,1,rep,name=scores,proto3" json:"scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TicketScores) Reset()         { *m = TicketScores{} }
func (m *TicketScores) String() string { return proto.CompactTextString(m) }
func (*TicketScores) ProtoMessage()    {}
func (*TicketScores) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *TicketScores) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketScores.Unmarshal(m, b)
}
func (m *TicketScores) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketScores.Marshal(b, m, deterministic)
}
func (m *TicketScores) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketScores.Merge(m, src)
}
func (m *TicketScores) XXX_Size() int {
	return xxx_messageInfo_TicketScores.Size(m)
}
func (m *TicketScores) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketScores.DiscardUnknown(m)
}

var xxx_messageInfo_TicketScores proto.InternalMessageInfo

func (m *TicketScores) GetScores() []*TicketValues {
	if m != nil {
		return m.Scores
	}
	return nil
}

//Bytes are {category1: val1, categoryN: ....}
type TicketValues struct {
	Id                   *ID      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Categories           [][]byte `protobuf:"bytes,2,rep,name=categories,proto3" json:"categories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketValues) Reset()         { *m = TicketValues{} }
func (m *TicketValues) String() string { return proto.CompactTextString(m) }
func (*TicketValues) ProtoMessage()    {}
func (*TicketValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *TicketValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketValues.Unmarshal(m, b)
}
func (m *TicketValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketValues.Marshal(b, m, deterministic)
}
func (m *TicketValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketValues.Merge(m, src)
}
func (m *TicketValues) XXX_Size() int {
	return xxx_messageInfo_TicketValues.Size(m)
}
func (m *TicketValues) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketValues.DiscardUnknown(m)
}

var xxx_messageInfo_TicketValues proto.InternalMessageInfo

func (m *TicketValues) GetId() *ID {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TicketValues) GetCategories() [][]byte {
	if m != nil {
		return m.Categories
	}
	return nil
}

type ID struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

//Overal quality score response
type Quality struct {
	Precentage           int32    `protobuf:"varint,1,opt,name=precentage,proto3" json:"precentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Quality) Reset()         { *m = Quality{} }
func (m *Quality) String() string { return proto.CompactTextString(m) }
func (*Quality) ProtoMessage()    {}
func (*Quality) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}

func (m *Quality) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quality.Unmarshal(m, b)
}
func (m *Quality) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quality.Marshal(b, m, deterministic)
}
func (m *Quality) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quality.Merge(m, src)
}
func (m *Quality) XXX_Size() int {
	return xxx_messageInfo_Quality.Size(m)
}
func (m *Quality) XXX_DiscardUnknown() {
	xxx_messageInfo_Quality.DiscardUnknown(m)
}

var xxx_messageInfo_Quality proto.InternalMessageInfo

func (m *Quality) GetPrecentage() int32 {
	if m != nil {
		return m.Precentage
	}
	return 0
}

//Period over period response
type PeriodChange struct {
	Selected             *Period  `protobuf:"bytes,1,opt,name=selected,proto3" json:"selected,omitempty"`
	SelectedChange       int32    `protobuf:"varint,2,opt,name=selected_change,json=selectedChange,proto3" json:"selected_change,omitempty"`
	Previous             *Period  `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	PreviousChange       int32    `protobuf:"varint,4,opt,name=previous_change,json=previousChange,proto3" json:"previous_change,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeriodChange) Reset()         { *m = PeriodChange{} }
func (m *PeriodChange) String() string { return proto.CompactTextString(m) }
func (*PeriodChange) ProtoMessage()    {}
func (*PeriodChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}

func (m *PeriodChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeriodChange.Unmarshal(m, b)
}
func (m *PeriodChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeriodChange.Marshal(b, m, deterministic)
}
func (m *PeriodChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeriodChange.Merge(m, src)
}
func (m *PeriodChange) XXX_Size() int {
	return xxx_messageInfo_PeriodChange.Size(m)
}
func (m *PeriodChange) XXX_DiscardUnknown() {
	xxx_messageInfo_PeriodChange.DiscardUnknown(m)
}

var xxx_messageInfo_PeriodChange proto.InternalMessageInfo

func (m *PeriodChange) GetSelected() *Period {
	if m != nil {
		return m.Selected
	}
	return nil
}

func (m *PeriodChange) GetSelectedChange() int32 {
	if m != nil {
		return m.SelectedChange
	}
	return 0
}

func (m *PeriodChange) GetPrevious() *Period {
	if m != nil {
		return m.Previous
	}
	return nil
}

func (m *PeriodChange) GetPreviousChange() int32 {
	if m != nil {
		return m.PreviousChange
	}
	return 0
}

func init() {
	proto.RegisterType((*DateRange)(nil), "proto.DateRange")
	proto.RegisterType((*Period)(nil), "proto.Period")
	proto.RegisterType((*Tickets)(nil), "proto.Tickets")
	proto.RegisterType((*Categories)(nil), "proto.Categories")
	proto.RegisterType((*CategoryResult)(nil), "proto.CategoryResult")
	proto.RegisterType((*TicketScores)(nil), "proto.TicketScores")
	proto.RegisterType((*TicketValues)(nil), "proto.TicketValues")
	proto.RegisterType((*ID)(nil), "proto.ID")
	proto.RegisterType((*Quality)(nil), "proto.Quality")
	proto.RegisterType((*PeriodChange)(nil), "proto.PeriodChange")
}

func init() {
	proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626)
}

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 535 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xcb, 0x6e, 0x13, 0x31,
	0x14, 0xd5, 0xe4, 0xd5, 0xe6, 0xe6, 0x41, 0x70, 0x5b, 0x34, 0x80, 0x84, 0x82, 0x91, 0x20, 0x05,
	0x91, 0x45, 0x60, 0x83, 0xda, 0x0d, 0x34, 0x22, 0x0a, 0x0b, 0x1e, 0xa6, 0x62, 0x1b, 0x99, 0x99,
	0xcb, 0xd4, 0x22, 0x89, 0x23, 0xdb, 0x89, 0x34, 0x3f, 0xc0, 0x27, 0xf1, 0x05, 0x7c, 0x18, 0x1a,
	0x3f, 0xa6, 0x19, 0x35, 0xab, 0xb1, 0xcf, 0x39, 0xf7, 0x8c, 0xef, 0xb9, 0x36, 0xf4, 0x34, 0xaa,
	0x9d, 0x48, 0x70, 0xbc, 0x51, 0xd2, 0x48, 0xd2, 0xb4, 0x1f, 0x9a, 0x41, 0x7b, 0xca, 0x0d, 0x32,
	0xbe, 0xce, 0x90, 0x8c, 0xa1, 0xb3, 0x41, 0x25, 0x64, 0xba, 0xf8, 0xa5, 0xe4, 0x2a, 0x8e, 0x86,
	0xd1, 0xa8, 0x33, 0xe9, 0xb9, 0x82, 0xf1, 0x57, 0xcb, 0x30, 0x70, 0x8a, 0x8f, 0x4a, 0xae, 0xc8,
	0x4b, 0x68, 0x7b, 0xbd, 0x91, 0x71, 0xed, 0x90, 0xfa, 0xd8, 0xf1, 0xd7, 0x92, 0x4e, 0xa1, 0xe5,
	0x30, 0x42, 0xa0, 0x91, 0x23, 0x57, 0xd6, 0xbe, 0xc9, 0xec, 0x9a, 0x9c, 0x42, 0x73, 0x25, 0xd7,
	0xe6, 0xc6, 0xba, 0x34, 0x99, 0xdb, 0x90, 0x01, 0xd4, 0x53, 0x9e, 0xc7, 0x75, 0x8b, 0x15, 0x4b,
	0xfa, 0x1c, 0x8e, 0xae, 0x45, 0xf2, 0x1b, 0x8d, 0x26, 0x8f, 0xa1, 0x2e, 0x52, 0x1d, 0x47, 0xc3,
	0xfa, 0xa8, 0x33, 0x69, 0xfb, 0xdf, 0xce, 0xa7, 0xac, 0x40, 0xe9, 0x05, 0xc0, 0x15, 0x37, 0x98,
	0x49, 0x25, 0x50, 0x93, 0xd7, 0xd0, 0x52, 0xa8, 0xb7, 0x4b, 0xe3, 0xd5, 0x67, 0x5e, 0xed, 0x25,
	0x39, 0xb3, 0x24, 0xf3, 0x22, 0xfa, 0x27, 0x82, 0x7e, 0x95, 0x22, 0xcf, 0xa0, 0x97, 0x78, 0x64,
	0xb1, 0xe6, 0x2b, 0xb4, 0x87, 0x6f, 0xb3, 0x6e, 0x00, 0x3f, 0xf3, 0x15, 0x92, 0x07, 0xd0, 0x52,
	0xdc, 0x88, 0x75, 0xe6, 0xbb, 0xf0, 0x3b, 0xf2, 0x14, 0x1a, 0x29, 0x37, 0x68, 0xfb, 0xb8, 0x93,
	0x90, 0xa5, 0x8a, 0xfe, 0x75, 0x22, 0x15, 0xc6, 0x0d, 0xd7, 0xbf, 0xdd, 0xd0, 0x0b, 0xe8, 0xba,
	0x6e, 0xbf, 0x17, 0x5b, 0x4d, 0x5e, 0x41, 0xcb, 0x12, 0xa1, 0xeb, 0x13, 0x6f, 0xe5, 0x44, 0x3f,
	0xf8, 0x72, 0x8b, 0x9a, 0x79, 0x09, 0x9d, 0x87, 0x62, 0x87, 0x93, 0x87, 0x50, 0x13, 0xa9, 0x9f,
	0xe9, 0x5e, 0x5c, 0x35, 0x91, 0x92, 0x27, 0x00, 0x49, 0x99, 0x56, 0x5c, 0x1b, 0xd6, 0x47, 0x5d,
	0xb6, 0x87, 0xd0, 0x53, 0xa8, 0xcd, 0xa7, 0xa4, 0x5f, 0x1a, 0x34, 0x8b, 0x2a, 0x7a, 0x0e, 0x47,
	0xdf, 0xb6, 0x7c, 0x29, 0x4c, 0x5e, 0x18, 0x6c, 0x14, 0x26, 0xb8, 0x36, 0x3c, 0x43, 0x2f, 0xd9,
	0x43, 0xe8, 0xdf, 0x08, 0xba, 0xae, 0xdf, 0xab, 0x1b, 0x7b, 0xd3, 0xce, 0xe1, 0x58, 0xe3, 0x12,
	0x13, 0x83, 0xe9, 0xe1, 0x6b, 0x56, 0xd2, 0xe4, 0x05, 0xdc, 0x0b, 0xeb, 0x45, 0x62, 0xab, 0x7d,
	0xbc, 0xfd, 0x00, 0xdf, 0x7a, 0x6e, 0x14, 0xee, 0x84, 0xdc, 0xea, 0xc3, 0x51, 0x97, 0x74, 0xe1,
	0x19, 0xd6, 0xc1, 0xd3, 0x05, 0xdf, 0x0f, 0xb0, 0xf3, 0x9c, 0x7c, 0x82, 0x9e, 0x9f, 0x80, 0x7b,
	0x3c, 0xe4, 0x1d, 0x90, 0x59, 0x98, 0xc7, 0x87, 0x3c, 0xdc, 0xc5, 0x7e, 0x65, 0x10, 0xfa, 0x51,
	0x75, 0x30, 0x4e, 0x3d, 0xf9, 0x17, 0xc1, 0xa0, 0x7c, 0x6b, 0xc1, 0xef, 0x12, 0x4e, 0x66, 0x68,
	0xdc, 0x01, 0xbf, 0xec, 0x50, 0xf9, 0x37, 0x32, 0xf0, 0x06, 0xa5, 0xbe, 0xb4, 0xac, 0xc4, 0xf8,
	0x16, 0x06, 0x33, 0x34, 0x45, 0x1d, 0x5f, 0x86, 0x59, 0xdc, 0x2d, 0x0d, 0xa7, 0x0b, 0x8a, 0x4b,
	0x38, 0x9b, 0xa1, 0x79, 0x9f, 0x65, 0x0a, 0x33, 0x5e, 0xe4, 0xe7, 0x2f, 0xf1, 0x81, 0xd2, 0xfb,
	0xd5, 0x97, 0x22, 0x50, 0xff, 0x6c, 0x59, 0xe4, 0xcd, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x84,
	0xd3, 0x70, 0xc2, 0x50, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TicketServiceClient is the client API for TicketService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketServiceClient interface {
	GetScoresByTickets(ctx context.Context, in *Tickets, opts ...grpc.CallOption) (*TicketScores, error)
}

type ticketServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewTicketServiceClient(cc grpc.ClientConnInterface) TicketServiceClient {
	return &ticketServiceClient{cc}
}

func (c *ticketServiceClient) GetScoresByTickets(ctx context.Context, in *Tickets, opts ...grpc.CallOption) (*TicketScores, error) {
	out := new(TicketScores)
	err := c.cc.Invoke(ctx, "/proto.TicketService/GetScoresByTickets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketServiceServer is the server API for TicketService service.
type TicketServiceServer interface {
	GetScoresByTickets(context.Context, *Tickets) (*TicketScores, error)
}

// UnimplementedTicketServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTicketServiceServer struct {
}

func (*UnimplementedTicketServiceServer) GetScoresByTickets(ctx context.Context, req *Tickets) (*TicketScores, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetScoresByTickets not implemented")
}

func RegisterTicketServiceServer(s *grpc.Server, srv TicketServiceServer) {
	s.RegisterService(&_TicketService_serviceDesc, srv)
}

func _TicketService_GetScoresByTickets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Tickets)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).GetScoresByTickets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TicketService/GetScoresByTickets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).GetScoresByTickets(ctx, req.(*Tickets))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TicketService",
	HandlerType: (*TicketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetScoresByTickets",
			Handler:    _TicketService_GetScoresByTickets_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

// DateRangeServiceClient is the client API for DateRangeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DateRangeServiceClient interface {
	GetPeriodOverPeriod(ctx context.Context, in *DateRange, opts ...grpc.CallOption) (*PeriodChange, error)
	GetOveralQuality(ctx context.Context, in *DateRange, opts ...grpc.CallOption) (*Quality, error)
	GetAggregatedCategory(ctx context.Context, in *DateRange, opts ...grpc.CallOption) (*Categories, error)
}

type dateRangeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDateRangeServiceClient(cc grpc.ClientConnInterface) DateRangeServiceClient {
	return &dateRangeServiceClient{cc}
}

func (c *dateRangeServiceClient) GetPeriodOverPeriod(ctx context.Context, in *DateRange, opts ...grpc.CallOption) (*PeriodChange, error) {
	out := new(PeriodChange)
	err := c.cc.Invoke(ctx, "/proto.DateRangeService/GetPeriodOverPeriod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dateRangeServiceClient) GetOveralQuality(ctx context.Context, in *DateRange, opts ...grpc.CallOption) (*Quality, error) {
	out := new(Quality)
	err := c.cc.Invoke(ctx, "/proto.DateRangeService/GetOveralQuality", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dateRangeServiceClient) GetAggregatedCategory(ctx context.Context, in *DateRange, opts ...grpc.CallOption) (*Categories, error) {
	out := new(Categories)
	err := c.cc.Invoke(ctx, "/proto.DateRangeService/GetAggregatedCategory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DateRangeServiceServer is the server API for DateRangeService service.
type DateRangeServiceServer interface {
	GetPeriodOverPeriod(context.Context, *DateRange) (*PeriodChange, error)
	GetOveralQuality(context.Context, *DateRange) (*Quality, error)
	GetAggregatedCategory(context.Context, *DateRange) (*Categories, error)
}

// UnimplementedDateRangeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDateRangeServiceServer struct {
}

func (*UnimplementedDateRangeServiceServer) GetPeriodOverPeriod(ctx context.Context, req *DateRange) (*PeriodChange, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPeriodOverPeriod not implemented")
}
func (*UnimplementedDateRangeServiceServer) GetOveralQuality(ctx context.Context, req *DateRange) (*Quality, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOveralQuality not implemented")
}
func (*UnimplementedDateRangeServiceServer) GetAggregatedCategory(ctx context.Context, req *DateRange) (*Categories, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAggregatedCategory not implemented")
}

func RegisterDateRangeServiceServer(s *grpc.Server, srv DateRangeServiceServer) {
	s.RegisterService(&_DateRangeService_serviceDesc, srv)
}

func _DateRangeService_GetPeriodOverPeriod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DateRange)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DateRangeServiceServer).GetPeriodOverPeriod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DateRangeService/GetPeriodOverPeriod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DateRangeServiceServer).GetPeriodOverPeriod(ctx, req.(*DateRange))
	}
	return interceptor(ctx, in, info, handler)
}

func _DateRangeService_GetOveralQuality_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DateRange)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DateRangeServiceServer).GetOveralQuality(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DateRangeService/GetOveralQuality",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DateRangeServiceServer).GetOveralQuality(ctx, req.(*DateRange))
	}
	return interceptor(ctx, in, info, handler)
}

func _DateRangeService_GetAggregatedCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DateRange)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DateRangeServiceServer).GetAggregatedCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DateRangeService/GetAggregatedCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DateRangeServiceServer).GetAggregatedCategory(ctx, req.(*DateRange))
	}
	return interceptor(ctx, in, info, handler)
}

var _DateRangeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DateRangeService",
	HandlerType: (*DateRangeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPeriodOverPeriod",
			Handler:    _DateRangeService_GetPeriodOverPeriod_Handler,
		},
		{
			MethodName: "GetOveralQuality",
			Handler:    _DateRangeService_GetOveralQuality_Handler,
		},
		{
			MethodName: "GetAggregatedCategory",
			Handler:    _DateRangeService_GetAggregatedCategory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
